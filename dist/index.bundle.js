(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),A=t(645),i=t.n(A)()(r());i.push([n.id,"* {\n    box-sizing: border-box;\n}\nhtml {\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;  \n   \n}\n/* \n////////////\nform styling\n////////////\n*/\n.formContainer{\n    background-color: aquamarine;\n    display: none;  \n    position: absolute;\n    top: 33%;\n    left: 33%; \n}\n\n.formContainer.show {\n    border: 1px solid black;\n    display: inline-block;  \n}\n\n.formHeader {\n    background-color: rgb(99, 91, 105);\n    display: flex;\n    justify-content: space-between;\n}\n.closeForm {\n    border-style: none;\n    color: white;\n    background-color: rgb(99, 91, 105);\n    cursor: pointer;\n}\n\n.formContainer h2 {\n    margin: 0;\n    color: white;\n    padding-left: .2rem;\n}\n\n.formUl{\n    margin: 0;\n    padding: 0;\n    list-style: none; \n}\n\n.formLi{\n    padding:.2rem;\n}\n\ntextarea{\n    width: 300px;\n    height: 100px;\n    border: none;\n    outline-style: none;\n}\n\nlabel {\n    font-weight: 100;\n}\ninput{\n    outline-style: none;\n    border: none;\n    border-radius: 3;\n}\n\n.submit {\n  border-color: rgb(95, 179, 10);\n  box-shadow: none;\n  border-style: none;\n  border: 1px solid  rgb(95, 179, 10);\n  border-radius: 2px;\n  padding: 0 1rem;\n  color:  rgb(95, 179, 10);\n}\n\n.submit:hover{\n    color: white;\n    background-color: rgb(95, 179, 10);\n}\n\n.formLi_footer {\n   display: flex;\n   justify-content: space-between;\n}\n\n.priority{\n    border-radius: 2px;\n    padding: 0;\n    font-size: .7rem;\n    color:  rgb(95, 179, 10);\n    border-color: rgb(95, 179, 10);;\n}\n\n/* \n///////////////\ntodoDiv styling   \n//////////////\n*/\n.todoDiv {\n    background-color: rgb(71, 241, 127);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0;\n    margin:0.3rem;\n    height: 2rem; \n}\n.todoDiv:hover {\n    transform: scale(1.01);\n    box-shadow: 2px 2px 2px rgb(34, 56, 3);  \n}\n.todoDiv.checked {\n    background-color: rgb(182, 238, 201);\n    color: rgb(120, 125, 144);\n    text-decoration: line-through;\n    \n}\n\n.todoDivRight{\n    display: flex;\n    gap: 1rem;\n}\n.todoDivLeft {\n    display: flex;\n    gap: 1rem;\n    height: 2rem;\n}\n\n.todoDivCenter {\n    flex:1;\n}\n\n.todoCheckMark {\n    accent-color: rgb(172, 243, 172);\n   border:1px solid #00f13c;\n}\n\n\n.todoPriority{\n    background-color: red;\n    height: 100%;\n    width: 0.3rem;\n}\n\n.todoTitle,\n.todoDescription,\n.dueDate {\n    margin: 0;\n    font-size: 1rem;\n    font-weight: 400;\n}\n/* \n///////////////////////\ncontentDiv styling\n//////////////////////\n*/\n.contentDiv{\n    border: 1px solid black;\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: 60px auto 40px;\n    height: 80vh;\n}\n.headerDiv {\n    grid-column: 1 / 3;\n    background-color: rgb(208, 217, 233);\n    display: flex;\n    align-items: center;\n    \n}\n\n.middleDiv {\n    grid-column: 1 / 3;\n   display: flex;\n   justify-content: space-between;\n}\n\n\n.todoContainer{\n   flex: 1;\n \n   \n}\n\n.footerDiv {\n    grid-column: 1 / 3;\n    display: flex;\n    justify-content: start;\n    align-items: center;\n}\n\n/* \n///////////////////////\nHeader styling\n//////////////////////\n*/\n.headerDiv h1 {\n    padding: .3rem;\n}\n/* \n///////////////////////\nprojectsDiv styling\n//////////////////////\n*/\n.projectsDiv {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    font-size: 1.3rem;\n}\n\n/* \n///////////////////////\nFooter styling\n//////////////////////\n*/\n\n.footerDiv button {\n   \n    margin: 1rem;\n    height: 2rem;\n    width: 2rem;\n    border-radius: 100px;\n}\n\n\n\n\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;AAC1B;AACA;IACI,4EAA4E;;AAEhF;AACA;;;;CAIC;AACD;IACI,4BAA4B;IAC5B,aAAa;IACb,kBAAkB;IAClB,QAAQ;IACR,SAAS;AACb;;AAEA;IACI,uBAAuB;IACvB,qBAAqB;AACzB;;AAEA;IACI,kCAAkC;IAClC,aAAa;IACb,8BAA8B;AAClC;AACA;IACI,kBAAkB;IAClB,YAAY;IACZ,kCAAkC;IAClC,eAAe;AACnB;;AAEA;IACI,SAAS;IACT,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,SAAS;IACT,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;AACpB;AACA;IACI,mBAAmB;IACnB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;EACE,8BAA8B;EAC9B,gBAAgB;EAChB,kBAAkB;EAClB,mCAAmC;EACnC,kBAAkB;EAClB,eAAe;EACf,wBAAwB;AAC1B;;AAEA;IACI,YAAY;IACZ,kCAAkC;AACtC;;AAEA;GACG,aAAa;GACb,8BAA8B;AACjC;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,gBAAgB;IAChB,wBAAwB;IACxB,8BAA8B;AAClC;;AAEA;;;;CAIC;AACD;IACI,mCAAmC;IACnC,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,UAAU;IACV,aAAa;IACb,YAAY;AAChB;AACA;IACI,sBAAsB;IACtB,sCAAsC;AAC1C;AACA;IACI,oCAAoC;IACpC,yBAAyB;IACzB,6BAA6B;;AAEjC;;AAEA;IACI,aAAa;IACb,SAAS;AACb;AACA;IACI,aAAa;IACb,SAAS;IACT,YAAY;AAChB;;AAEA;IACI,MAAM;AACV;;AAEA;IACI,gCAAgC;GACjC,wBAAwB;AAC3B;;;AAGA;IACI,qBAAqB;IACrB,YAAY;IACZ,aAAa;AACjB;;AAEA;;;IAGI,SAAS;IACT,eAAe;IACf,gBAAgB;AACpB;AACA;;;;CAIC;AACD;IACI,uBAAuB;IACvB,aAAa;IACb,8BAA8B;IAC9B,kCAAkC;IAClC,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,oCAAoC;IACpC,aAAa;IACb,mBAAmB;;AAEvB;;AAEA;IACI,kBAAkB;GACnB,aAAa;GACb,8BAA8B;AACjC;;;AAGA;GACG,OAAO;;;AAGV;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;;;;CAIC;AACD;IACI,cAAc;AAClB;AACA;;;;CAIC;AACD;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,iBAAiB;AACrB;;AAEA;;;;CAIC;;AAED;;IAEI,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,oBAAoB;AACxB",sourcesContent:["* {\n    box-sizing: border-box;\n}\nhtml {\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;  \n   \n}\n/* \n////////////\nform styling\n////////////\n*/\n.formContainer{\n    background-color: aquamarine;\n    display: none;  \n    position: absolute;\n    top: 33%;\n    left: 33%; \n}\n\n.formContainer.show {\n    border: 1px solid black;\n    display: inline-block;  \n}\n\n.formHeader {\n    background-color: rgb(99, 91, 105);\n    display: flex;\n    justify-content: space-between;\n}\n.closeForm {\n    border-style: none;\n    color: white;\n    background-color: rgb(99, 91, 105);\n    cursor: pointer;\n}\n\n.formContainer h2 {\n    margin: 0;\n    color: white;\n    padding-left: .2rem;\n}\n\n.formUl{\n    margin: 0;\n    padding: 0;\n    list-style: none; \n}\n\n.formLi{\n    padding:.2rem;\n}\n\ntextarea{\n    width: 300px;\n    height: 100px;\n    border: none;\n    outline-style: none;\n}\n\nlabel {\n    font-weight: 100;\n}\ninput{\n    outline-style: none;\n    border: none;\n    border-radius: 3;\n}\n\n.submit {\n  border-color: rgb(95, 179, 10);\n  box-shadow: none;\n  border-style: none;\n  border: 1px solid  rgb(95, 179, 10);\n  border-radius: 2px;\n  padding: 0 1rem;\n  color:  rgb(95, 179, 10);\n}\n\n.submit:hover{\n    color: white;\n    background-color: rgb(95, 179, 10);\n}\n\n.formLi_footer {\n   display: flex;\n   justify-content: space-between;\n}\n\n.priority{\n    border-radius: 2px;\n    padding: 0;\n    font-size: .7rem;\n    color:  rgb(95, 179, 10);\n    border-color: rgb(95, 179, 10);;\n}\n\n/* \n///////////////\ntodoDiv styling   \n//////////////\n*/\n.todoDiv {\n    background-color: rgb(71, 241, 127);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0;\n    margin:0.3rem;\n    height: 2rem; \n}\n.todoDiv:hover {\n    transform: scale(1.01);\n    box-shadow: 2px 2px 2px rgb(34, 56, 3);  \n}\n.todoDiv.checked {\n    background-color: rgb(182, 238, 201);\n    color: rgb(120, 125, 144);\n    text-decoration: line-through;\n    \n}\n\n.todoDivRight{\n    display: flex;\n    gap: 1rem;\n}\n.todoDivLeft {\n    display: flex;\n    gap: 1rem;\n    height: 2rem;\n}\n\n.todoDivCenter {\n    flex:1;\n}\n\n.todoCheckMark {\n    accent-color: rgb(172, 243, 172);\n   border:1px solid #00f13c;\n}\n\n\n.todoPriority{\n    background-color: red;\n    height: 100%;\n    width: 0.3rem;\n}\n\n.todoTitle,\n.todoDescription,\n.dueDate {\n    margin: 0;\n    font-size: 1rem;\n    font-weight: 400;\n}\n/* \n///////////////////////\ncontentDiv styling\n//////////////////////\n*/\n.contentDiv{\n    border: 1px solid black;\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: 60px auto 40px;\n    height: 80vh;\n}\n.headerDiv {\n    grid-column: 1 / 3;\n    background-color: rgb(208, 217, 233);\n    display: flex;\n    align-items: center;\n    \n}\n\n.middleDiv {\n    grid-column: 1 / 3;\n   display: flex;\n   justify-content: space-between;\n}\n\n\n.todoContainer{\n   flex: 1;\n \n   \n}\n\n.footerDiv {\n    grid-column: 1 / 3;\n    display: flex;\n    justify-content: start;\n    align-items: center;\n}\n\n/* \n///////////////////////\nHeader styling\n//////////////////////\n*/\n.headerDiv h1 {\n    padding: .3rem;\n}\n/* \n///////////////////////\nprojectsDiv styling\n//////////////////////\n*/\n.projectsDiv {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    font-size: 1.3rem;\n}\n\n/* \n///////////////////////\nFooter styling\n//////////////////////\n*/\n\n.footerDiv button {\n   \n    margin: 1rem;\n    height: 2rem;\n    width: 2rem;\n    border-radius: 100px;\n}\n\n\n\n\n\n"],sourceRoot:""}]);const a=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);o&&i[c[0]]||(void 0!==A&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=A),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),A="/*# ".concat(r," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var A={},i=[],a=0;a<n.length;a++){var s=n[a],d=o.base?s[0]+o.base:s[0],c=A[d]||0,l="".concat(d," ").concat(c);A[d]=c+1;var C=t(l),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==C)e[C].references++,e[C].updater(p);else{var u=r(p,o);o.byIndex=a,e.splice(a,0,{identifier:l,updater:u,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var A=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=t(A[i]);e[a].references--}for(var s=o(n,r),d=0;d<A.length;d++){var c=t(A[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}A=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var A=e[o]={id:o,exports:{}};return n[o](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{class n{constructor(n,e,t,o,r){this.title=n,this.description=e,this.dueDate=t,this.priority=o,this.checklist=r}}function e(){const n=document.getElementById("todoDiv"),e=document.getElementById("todoCheckMark");e.checked?n.classList.add("checked"):e.checked||n.classList.remove("checked")}function o(){console.log("handle details")}function r(n){const t=document.getElementById("todoContainer");t.textContent="",n.forEach((n=>{const r=document.createElement("div");r.classList.add("todoDiv"),r.setAttribute("id","todoDiv");const A=document.createElement("div");A.setAttribute("id","todoPriority"),A.classList.add("todoPriority");const i=document.createElement("input");i.setAttribute("type","checkbox"),i.setAttribute("id","todoCheckMark"),i.classList.add("todoCheckMark"),i.addEventListener("change",e);const a=document.createElement("h5");a.classList.add("todoTitle"),a.innerHTML=n.title;const s=document.createElement("button");s.classList.add("todoDetails"),s.innerHTML="Details",s.addEventListener("click",o);const d=document.createElement("h6");d.classList.add("dueDate"),d.innerHTML=n.dueDate;const c=document.createElement("div");c.classList.add("todoDivLeft");const l=document.createElement("div");l.classList.add("todoDivCenter");const C=document.createElement("div");C.classList.add("todoDivRight"),c.appendChild(A),c.appendChild(i),l.appendChild(a),C.appendChild(s),C.appendChild(d),r.appendChild(c),r.appendChild(l),r.appendChild(C),t.appendChild(r)}))}var A=t(379),i=t.n(A),a=t(795),s=t.n(a),d=t(569),c=t.n(d),l=t(565),C=t.n(l),p=t(216),u=t.n(p),m=t(589),g=t.n(m),f=t(426),b={};b.styleTagTransform=g(),b.setAttributes=C(),b.insert=c().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=u(),i()(f.Z,b),f.Z&&f.Z.locals&&f.Z.locals;const h=[{title:"Hello",description:"This is short description",dueDate:"02/02/02",priority:"high"}];r(h);const B=document.getElementById("form"),I=document.getElementById("formContainer"),v=document.getElementById("addNewTodo"),y=document.getElementById("closeForm");v.addEventListener("click",(function(){I.classList.add("show"),console.log(I.classList)})),y.addEventListener("click",(function(){I.classList.remove("show")})),B.addEventListener("submit",(function(e){e.preventDefault();const t=document.getElementById("title").value,o=document.getElementById("description").value,A=document.getElementById("dueDate").value,i=new n(t,o,A,priority);h.push(i),r(h),I.classList.remove("show")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,